{"ast":null,"code":"var _jsxFileName = \"/Users/dereksams/Desktop/lua-job-board/src/components/MainJobBoard/MainJobBoard.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./MainJobBoard.scss\";\nexport default class MainJobBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jobs: [],\n      dropdownIsOpen: true,\n      dropdownId: null,\n      prevDropdownId: 0,\n      areTheyEqual: null\n    };\n    this.handleDropdown = this.handleDropdown.bind(this); // this.dropdownId = this.dropdownId.bind(this);\n  }\n\n  componentDidMount(e) {\n    axios.get(\"/getjobs\").then(res => {\n      this.setState({\n        jobs: res.data\n      });\n    });\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    console.log(this.state.dropdownId); //will show the previous state\n\n    console.log(nextState.dropdownId); //will show the new state\n\n    if (nextState.dropdownId === this.state.dropdownId) {\n      this.state.areTheyEqual = 2222;\n    }\n  }\n\n  handleDropdown(e) {\n    this.setState({\n      dropdownIsOpen: !this.state.dropdownIsOpen\n    }); // this.setState(prevState => ({\n    //   prevDropdownId: prevState.dropdownId\n    // }));\n    // this.setState({ prevDropdownId: this.state.dropdownId++ });\n    // console.log(this.state.dropdownIsOpen);\n    // console.log(\"previously: \" + this.state.dropdownId);\n    // console.log(\"hey\");\n  }\n\n  render() {\n    // console.log(\"currently \" + this.state.prevDropdownId);\n    return React.createElement(\"div\", {\n      onClick: this.handleDropdown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.state.jobs.map((val, index) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: this.handleDropdown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"all-jobs\" // onClick={this.handleDropdown}\n        ,\n        onClick: () => this.setState({\n          dropdownId: val.id\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"dropdownId:\" + this.state.dropdownId), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.state.areTheyEqual), React.createElement(\"div\", {\n        className: \"pre-dropdown-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"company-logo-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"company-logo\",\n        src: val.company_logo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"title-and-company-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, val.job_name), React.createElement(\"div\", {\n        className: \"company-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"company-paragraph\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, val.company_name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \" | \"), React.createElement(\"p\", {\n        className: \"location-paragraph\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, val.job_location)))), React.createElement(\"div\", {\n        className: \"days-ago-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, val.days_since_posted), React.createElement(\"div\", {\n        className: \"apply-now-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        action: val.company_email,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"apply-now-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Apply\")))), React.createElement(\"div\", {\n        className: \"myclass-\" + (this.state.prevDropdownId !== this.state.dropdownId ? 0 : 1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, this.state.dropdownId === val.id ? React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"val.id= \" + val.id + \" \" + val.job_description) : React.createElement(\"h1\", {\n        className: \"do-not-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.state.prevDropdownId + \"\" + this.state.dropdownId)))));\n    }));\n  }\n\n} // this.state.prevDropdownId !== val.id ? (\n// this.state.prevDropdownId !== this.state.dropdownId &&\n// this.state.dropdownIsOpen === false &&","map":{"version":3,"sources":["/Users/dereksams/Desktop/lua-job-board/src/components/MainJobBoard/MainJobBoard.js"],"names":["React","Component","axios","MainJobBoard","constructor","props","state","jobs","dropdownIsOpen","dropdownId","prevDropdownId","areTheyEqual","handleDropdown","bind","componentDidMount","e","get","then","res","setState","data","componentWillUpdate","nextProps","nextState","console","log","render","map","val","index","id","company_logo","job_name","company_name","job_location","days_since_posted","company_email","job_description"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./MainJobBoard.scss\";\n\nexport default class MainJobBoard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      jobs: [],\n      dropdownIsOpen: true,\n      dropdownId: null,\n      prevDropdownId: 0,\n      areTheyEqual: null\n    };\n    this.handleDropdown = this.handleDropdown.bind(this);\n    // this.dropdownId = this.dropdownId.bind(this);\n  }\n\n  componentDidMount(e) {\n    axios.get(\"/getjobs\").then(res => {\n      this.setState({ jobs: res.data });\n    });\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    console.log(this.state.dropdownId); //will show the previous state\n    console.log(nextState.dropdownId); //will show the new state\n    if (nextState.dropdownId === this.state.dropdownId) {\n      this.state.areTheyEqual = 2222;\n    }\n  }\n\n  handleDropdown(e) {\n    this.setState({ dropdownIsOpen: !this.state.dropdownIsOpen });\n    // this.setState(prevState => ({\n    //   prevDropdownId: prevState.dropdownId\n    // }));\n    // this.setState({ prevDropdownId: this.state.dropdownId++ });\n    // console.log(this.state.dropdownIsOpen);\n    // console.log(\"previously: \" + this.state.dropdownId);\n    // console.log(\"hey\");\n  }\n\n  render() {\n    // console.log(\"currently \" + this.state.prevDropdownId);\n    return (\n      <div onClick={this.handleDropdown}>\n        {this.state.jobs.map((val, index) => {\n          return (\n            <div\n            // onClick={() =>\n            //   this.setState(prevState => ({\n            //     prevDropdownId: prevState.dropdownId\n            //   }))\n            // }\n            >\n              <div onClick={this.handleDropdown}>\n                <div\n                  className=\"all-jobs\"\n                  // onClick={this.handleDropdown}\n                  onClick={() => this.setState({ dropdownId: val.id })}\n                >\n                  <h1>{\"dropdownId:\" + this.state.dropdownId}</h1>\n                  <h1>{this.state.areTheyEqual}</h1>\n                  {/* <h1>{val.id}</h1> */}\n                  <div className=\"pre-dropdown-container\">\n                    <div className=\"company-logo-div\">\n                      <img\n                        className=\"company-logo\"\n                        src={val.company_logo}\n                      ></img>\n                    </div>\n                    <div className=\"title-and-company-div\">\n                      <div className=\"title-div\">{val.job_name}</div>\n                      <div className=\"company-div\">\n                        <p className=\"company-paragraph\">{val.company_name}</p>\n                        <p> | </p>\n                        <p className=\"location-paragraph\">\n                          <strong>{val.job_location}</strong>\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"days-ago-div\">{val.days_since_posted}</div>\n                    <div className=\"apply-now-div\">\n                      <form action={val.company_email} target=\"_blank\">\n                        <button type=\"submit\" className=\"apply-now-button\">\n                          Apply\n                        </button>\n                      </form>\n                    </div>\n                  </div>\n                  {/* <div className=\"content\"></div> */}\n                  <div\n                    className={\n                      \"myclass-\" +\n                      (this.state.prevDropdownId !== this.state.dropdownId\n                        ? 0\n                        : 1)\n                    }\n                  >\n                    {this.state.dropdownId === val.id ? (\n                      <h3>{\"val.id= \" + val.id + \" \" + val.job_description}</h3>\n                    ) : (\n                      <h1 className=\"do-not-display\">\n                        {this.state.prevDropdownId + \"\" + this.state.dropdownId}\n                      </h1>\n                    )}\n                    {/* <h1>hasdfey</h1> */}\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\n// this.state.prevDropdownId !== val.id ? (\n// this.state.prevDropdownId !== this.state.dropdownId &&\n// this.state.dropdownIsOpen === false &&\n"]},"metadata":{},"sourceType":"module"}