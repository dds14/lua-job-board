{"ast":null,"code":"var _jsxFileName = \"/Users/dereksams/Desktop/lua-job-board/src/components/MainJobBoard/MainJobBoard.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./MainJobBoard.scss\";\nexport default class MainJobBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jobs: [],\n      dropdownIsOpen: true,\n      dropdownId: 0,\n      prevDropdownId: 0\n    };\n    this.handleDropdown = this.handleDropdown.bind(this); // this.dropdownId = this.dropdownId.bind(this);\n  }\n\n  componentDidMount(e) {\n    axios.get(\"/getjobs\").then(res => {\n      this.setState({\n        jobs: res.data\n      });\n    });\n  }\n\n  handleDropdown(e) {\n    this.setState({\n      dropdownIsOpen: !this.state.dropdownIsOpen\n    });\n    this.setState({\n      prevDropdownId: prevState.dropdownId\n    });\n    console.log(this.state.dropdownIsOpen);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      onClick: this.handleDropdown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.state.jobs.map((val, index) => {\n      return React.createElement(\"div\", {\n        onClick: () => this.setState({\n          prevDropdownId: prevState.dropdownId\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: this.handleDropdown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"all-jobs\" // onClick={this.handleDropdown}\n        ,\n        onClick: () => this.setState({\n          dropdownId: val.id\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"dropdownId:\" + this.state.dropdownId), React.createElement(\"div\", {\n        className: \"pre-dropdown-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"company-logo-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"company-logo\",\n        src: val.company_logo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"title-and-company-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, val.job_name), React.createElement(\"div\", {\n        className: \"company-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"company-paragraph\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, val.company_name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \" | \"), React.createElement(\"p\", {\n        className: \"location-paragraph\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, val.job_location)))), React.createElement(\"div\", {\n        className: \"days-ago-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, val.days_since_posted), React.createElement(\"div\", {\n        className: \"apply-now-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        action: val.company_email,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"apply-now-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Apply\")))), React.createElement(\"div\", {\n        className: \"myclass-\" + (this.state.dropdownId === val.id ? val.id : 0),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.state.dropdownId === val.id && this.state.dropdownIsOpen === true && prevDropdownId !== val.id ? React.createElement(\"h1\", {\n        className: \"do-not-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"hey\") : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"val.id= \" + val.id + \" \" + val.job_description)))));\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/dereksams/Desktop/lua-job-board/src/components/MainJobBoard/MainJobBoard.js"],"names":["React","Component","axios","MainJobBoard","constructor","props","state","jobs","dropdownIsOpen","dropdownId","prevDropdownId","handleDropdown","bind","componentDidMount","e","get","then","res","setState","data","prevState","console","log","render","map","val","index","id","company_logo","job_name","company_name","job_location","days_since_posted","company_email","job_description"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./MainJobBoard.scss\";\n\nexport default class MainJobBoard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      jobs: [],\n      dropdownIsOpen: true,\n      dropdownId: 0,\n      prevDropdownId: 0\n    };\n    this.handleDropdown = this.handleDropdown.bind(this);\n    // this.dropdownId = this.dropdownId.bind(this);\n  }\n\n  componentDidMount(e) {\n    axios.get(\"/getjobs\").then(res => {\n      this.setState({ jobs: res.data });\n    });\n  }\n\n  handleDropdown(e) {\n    this.setState({ dropdownIsOpen: !this.state.dropdownIsOpen });\n    this.setState({ prevDropdownId: prevState.dropdownId });\n    console.log(this.state.dropdownIsOpen);\n  }\n\n  render() {\n    return (\n      <div onClick={this.handleDropdown}>\n        {this.state.jobs.map((val, index) => {\n          return (\n            <div\n              onClick={() =>\n                this.setState({ prevDropdownId: prevState.dropdownId })\n              }\n            >\n              <div onClick={this.handleDropdown}>\n                <div\n                  className=\"all-jobs\"\n                  // onClick={this.handleDropdown}\n                  onClick={() => this.setState({ dropdownId: val.id })}\n                >\n                  <h1>{\"dropdownId:\" + this.state.dropdownId}</h1>\n                  {/* <h1>{val.id}</h1> */}\n                  <div className=\"pre-dropdown-container\">\n                    <div className=\"company-logo-div\">\n                      <img\n                        className=\"company-logo\"\n                        src={val.company_logo}\n                      ></img>\n                    </div>\n                    <div className=\"title-and-company-div\">\n                      <div className=\"title-div\">{val.job_name}</div>\n                      <div className=\"company-div\">\n                        <p className=\"company-paragraph\">{val.company_name}</p>\n                        <p> | </p>\n                        <p className=\"location-paragraph\">\n                          <strong>{val.job_location}</strong>\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"days-ago-div\">{val.days_since_posted}</div>\n                    <div className=\"apply-now-div\">\n                      <form action={val.company_email} target=\"_blank\">\n                        <button type=\"submit\" className=\"apply-now-button\">\n                          Apply\n                        </button>\n                      </form>\n                    </div>\n                  </div>\n                  {/* <div className=\"content\"></div> */}\n                  <div\n                    className={\n                      \"myclass-\" +\n                      (this.state.dropdownId === val.id ? val.id : 0)\n                    }\n                  >\n                    {/* {this.state.openDropdown === true ? ( */}\n                    {this.state.dropdownId === val.id &&\n                    this.state.dropdownIsOpen === true &&\n                    prevDropdownId !== val.id ? (\n                      <h1 className=\"do-not-display\">hey</h1>\n                    ) : (\n                      <h3>{\"val.id= \" + val.id + \" \" + val.job_description}</h3>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}